name: Build .NET Project

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.x"

      - name: Restore dependencies
        run: dotnet restore ./src

      - name: Build
        run: dotnet build ./src --configuration Release --no-restore

      - name: Publish
        run: dotnet publish ./src/LxInterview.Api/LxInterview.Api.csproj --configuration Release --output ./publish --no-build

      - name: Archive production artifacts
        run: tar -czvf app.tar.gz -C ./publish .

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-artifacts
          path: app.tar.gz

      - name: Set up SSH
        env:
          DO_SSH_PRIVATE_KEY: ${{ secrets.DO_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$DO_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 209.38.28.218 >> ~/.ssh/known_hosts

      - name: Copy artifact to DigitalOcean Droplet
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ./app.tar.gz root@209.38.28.218:/root/app.tar.gz

      - name: Deploy to DigitalOcean Droplet
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa root@209.38.28.218 "
            mkdir -p /var/www/myapp
            tar -xzvf /root/app.tar.gz -C /var/www/myapp

            pkill dotnet || true

            ASPNETCORE_URLS=http://*:80 dotnet /var/www/myapp/LxInterview.Api.dll &
          "
